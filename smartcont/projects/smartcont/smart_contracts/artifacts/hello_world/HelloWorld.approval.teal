#pragma version 10
#pragma typetrack false

// algopy.arc4.ARC4Contract.approval_program() -> uint64:
main:
    // smart_contracts/hello_world/contract.py:7
    // class HelloWorld(ARC4Contract):
    txn NumAppArgs
    bz main_bare_routing@7
    pushbytess 0x02bece11 0x80287964 // method "hello(string)string", method "corporate_treasury_marketplace()string"
    txna ApplicationArgs 0
    match main_hello_route@3 main_corporate_treasury_marketplace_route@4

main_after_if_else@11:
    // smart_contracts/hello_world/contract.py:7
    // class HelloWorld(ARC4Contract):
    pushint 0 // 0
    return

main_corporate_treasury_marketplace_route@4:
    // smart_contracts/hello_world/contract.py:12
    // @abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    pushbytes 0x151f7c7500174d61726b6574706c61636520696e697469616c697a6564
    log
    pushint 1 // 1
    return

main_hello_route@3:
    // smart_contracts/hello_world/contract.py:8
    // @abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    // smart_contracts/hello_world/contract.py:7
    // class HelloWorld(ARC4Contract):
    txna ApplicationArgs 1
    extract 2 0
    // smart_contracts/hello_world/contract.py:8
    // @abimethod()
    callsub hello
    dup
    len
    itob
    extract 6 2
    swap
    concat
    pushbytes 0x151f7c75
    swap
    concat
    log
    pushint 1 // 1
    return

main_bare_routing@7:
    // smart_contracts/hello_world/contract.py:7
    // class HelloWorld(ARC4Contract):
    txn OnCompletion
    bnz main_after_if_else@11
    txn ApplicationID
    !
    assert // can only call when creating
    pushint 1 // 1
    return


// smart_contracts.hello_world.contract.HelloWorld.hello(name: bytes) -> bytes:
hello:
    // smart_contracts/hello_world/contract.py:8-9
    // @abimethod()
    // def hello(self, name: String) -> String:
    proto 1 1
    // smart_contracts/hello_world/contract.py:10
    // return "Hello, " + name
    pushbytes "Hello, "
    frame_dig -1
    concat
    retsub
